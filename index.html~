<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>CSS3 transition 效果生成器</title>
    <link rel="stylesheet" href="style.css" >
</head>
<body>
    <div id="header">
        <h1>CSS3 动画生成器 V0.1</h1>
    </div>
    <!--操作区域 begin-->
    <div id="operationArea">
        <!--nnav begin-->
        <div id="sideNav">
            <ul id="navControl">
                <li class="active" data-target="0">transition</li><li data-target="1">border</li><li data-target="2">transform</li><li data-target="3">library</li>
            </ul>
        </div>
        <!--nav end-->
        <!--transition begin-->
        <div class="operation-block" id="canvasContainer1" data-p="0" data-time="0">
            <h2 class="canvas-title">cubic-bezier(<span id="bezierTitle">x1,y1,x2,y2</span>)</h2>
            <canvas id="cubicBezier" width="300" height="400">
                您的浏览器不支持canvas画布，请升级到最新版或下载Chrome浏览器(谷歌浏览器)*_*!!
            </canvas>
            <button class="drag-point" id="p1"></button>
            <button class="drag-point" id="p2"></button>
            <div style="padding: 0 50px;position: absolute;left: 0;top: 450px;right: 0;">
                <div>
                    <label for="duration">duration:<span class="output">1</span>s</label>
                    <input id="duration" type="range" min="0.1" step="0.1" max="10" value="1">
                </div>
                <div>
                    <label for="delay">delay:<span class="output">0</span>s</label>
                    <input id="delay" type="range" min="0" step="0.1" max="10" value="0">
                </div>
            </div>
        </div>
        <!--transition begin-->
        <div id="border" class="operation-block" style="display: none;">
            <ul>
                <li class="title">
                    border
                </li>
                <li>
                    <label for="borderRadiusLT">border-radius-left-top:<span class="output">0</span>px;</label>
                    <input id="borderRadiusLT" type="range" min="0" step="1" max="75" value="0">
                </li>
                <li>
                    <label for="borderRadiusRT">border-radius-right-top:<span class="output">0</span>px;</label>
                    <input id="borderRadiusRT" type="range" min="0" step="1" max="75" value="0">
                </li>
                <li>
                    <label for="borderRadiusRB">border-radius-right-bottom:<span class="output">0</span>px;</label>
                    <input id="borderRadiusRB" type="range" min="0" step="1" max="75" value="0">
                </li>
                <li>
                    <label for="borderRadiusLB">border-radius-left-bottom:<span class="output">0</span>px;</label>
                    <input id="borderRadiusLB" type="range" min="0" step="1" max="75" value="0">
                </li>
            </ul>
        </div>
        <div id="transform" class="operation-block" style="display: none;">
            <ul>
                <li class="title">
                    transform
                </li>
                <li>
                    <label for="translateX">translateX(<span class="output">0</span>px)</label>
                    <input id="translateX" type="range" min="-150" step="1" max="150" value="0">
                </li>
                <li>
                    <label for="translateY">translateY(<span class="output">0</span>px)</label>
                    <input id="translateY" type="range" min="-150" step="1" max="150" value="0">
                </li>
                <li>
                    <label for="rotate">rotate(<span class="output">0</span>deg)</label>
                    <input id="rotate" type="range" min="-360" step="5" max="360" value="0">
                </li>
                <li>
                    <label for="scaleX">scaleX(<span class="output">1</span>)</label>
                    <input id="scaleX" type="range" min="-4" step="0.1" max="4" value="1">
                </li>
                <li>
                    <label for="scaleY">scaleY(<span class="output">1</span>)</label>
                    <input id="scaleY" type="range" min="-4" step="0.1" max="4" value="1">
                </li>
                <li>
                    <label for="skewX">skewX(<span class="output">0</span>deg)</label>
                    <input id="skewX" type="range" min="-360" step="1" max="360" value="0">
                </li>
                <li>
                    <label for="skewY">skewY(<span class="output">0</span>deg)</label>
                    <input id="skewY" type="range" min="-360" step="1" max="360" value="0">
                </li>
            </ul>
        </div>
        <div id="library" class="operation-block" style="display:none;">
            <!--<格式>
            <div>
                <canvas width="100" height="100"></canvas>
                <button class="delete">X</button>
                <button class="view-code">view code</button>
                <button class="view-animation">view animation</button>
                <a target="_blank" href="">在新窗口查看</a>
            </div>
            -->
        </div>
    </div>
    <!--操作区域 end-->
    <div class="right-container">
        <div class="code-show">
            <button id="play">查看动画演示</button>
            <button id="showCode">查看完整兼容代码</button>
            <button id="addToLibrary">保存到library</button>
            <div id="basicAttrShow">
            </div>
        </div>
        <canvas id="basicTransformBlock">
            您的浏览器不支持canvas
        </canvas>
        <canvas id="transformBlock">
            您的浏览器不支持canvas
        </canvas>
    </div>
    <textarea id="code" onblur="this.style.display='none';">
    </textarea>
    <script src="main.js"></script>
    <script>
        /*导航切换逻辑*/
        (function() {
            var blocks=document.getElementsByClassName("operation-block");
            var navs=byId("navControl").getElementsByTagName("li");
            byId("navControl").addEventListener("click", function (e) {
                if (e.target.getAttribute("data-target") != null) {
                    for(var i=0;i<blocks.length;i++){
                        blocks[i].style.display="none";
                        if(navs[i].className.match(new RegExp('(\\s|^)active(\\s|$)'))){
                            navs[i].className="";
                        }
                    }
                    e.target.className="active";
                    blocks[e.target.getAttribute("data-target")].style.display="block";
                }
            });
        })();
    </script>
</body>
</html>